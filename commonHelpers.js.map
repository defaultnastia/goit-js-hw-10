{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst datepickerEl = document.querySelector('#datetime-picker');\nconst startButtonEl = document.querySelector('#start-btn');\nconst timerEl = document.querySelector('.timer');\nlet userSelectedDate;\n\n// #region DATEPICKER\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      callPastDateAlert();\n      startButtonEl.disabled = true;\n      return;\n    }\n    userSelectedDate = selectedDates[0];\n    startButtonEl.disabled = false;\n  },\n};\n\nflatpickr(datepickerEl, options);\n\n// #endregion DATEPICKER\n\n// #region LAUNCH-TIMER\n\nstartButtonEl.addEventListener('click', () => {\n  if (Date.now() >= userSelectedDate) {\n    callPastDateAlert();\n    startButtonEl.disabled = true;\n    return;\n  }\n\n  const intervalId = setInterval(() => {\n    if (userSelectedDate - Date.now() < 1000) {\n      endTimer(intervalId);\n    }\n\n    updateMarkupWithTimeLeft();\n  }, 1000);\n\n  callTimerStartedAlert();\n  startButtonEl.disabled = true;\n  datepickerEl.disabled = true;\n});\n\n// #endregion LAUNCH-TIMER\n\n// #region FUNCTIONS\n\nfunction endTimer(interval) {\n  clearInterval(interval);\n  startButtonEl.disabled = false;\n  datepickerEl.disabled = false;\n  callTimerEndedAlert();\n}\n\nfunction callPastDateAlert() {\n  iziToast.show({\n    message: 'Please choose a date in the future',\n    color: 'red',\n    timeout: 5000,\n    displayMode: 'replace',\n    position: 'topRight',\n  });\n}\n\nfunction callTimerStartedAlert() {\n  iziToast.show({\n    message:\n      'Timer is on. Please note: you cannot change timer while it is working',\n    color: 'yellow',\n    timeout: 5000,\n    displayMode: 'replace',\n    position: 'topRight',\n  });\n}\n\nfunction callTimerEndedAlert() {\n  iziToast.show({\n    message: 'Time is up! Set a new timer!',\n    color: 'green',\n    timeout: 5000,\n    displayMode: 'replace',\n    position: 'topRight',\n  });\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateMarkupWithTimeLeft() {\n  const timeLeft = convertMs(userSelectedDate - Date.now());\n  const { days, hours, minutes, seconds } = timeLeft;\n\n  timerEl.querySelector('[data-days]').textContent = addZero(days);\n  timerEl.querySelector('[data-hours]').textContent = addZero(hours);\n  timerEl.querySelector('[data-minutes]').textContent = addZero(minutes);\n  timerEl.querySelector('[data-seconds]').textContent = addZero(seconds);\n}\n\nfunction addZero(value) {\n  return String(value).padStart(2, '0');\n}\n// #endregion FUNCTIONS\n"],"names":["datepickerEl","startButtonEl","timerEl","userSelectedDate","options","selectedDates","callPastDateAlert","flatpickr","intervalId","endTimer","updateMarkupWithTimeLeft","callTimerStartedAlert","interval","callTimerEndedAlert","iziToast","convertMs","ms","days","hours","minutes","seconds","timeLeft","addZero","value"],"mappings":"+IAKA,MAAMA,EAAe,SAAS,cAAc,kBAAkB,EACxDC,EAAgB,SAAS,cAAc,YAAY,EACnDC,EAAU,SAAS,cAAc,QAAQ,EAC/C,IAAIC,EAIJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,EAAI,KAAK,IAAG,EAAI,CACjCC,IACAL,EAAc,SAAW,GACzB,MACD,CACDE,EAAmBE,EAAc,CAAC,EAClCJ,EAAc,SAAW,EAC1B,CACH,EAEAM,EAAUP,EAAcI,CAAO,EAM/BH,EAAc,iBAAiB,QAAS,IAAM,CAC5C,GAAI,KAAK,IAAK,GAAIE,EAAkB,CAClCG,IACAL,EAAc,SAAW,GACzB,MACD,CAED,MAAMO,EAAa,YAAY,IAAM,CAC/BL,EAAmB,KAAK,IAAG,EAAK,KAClCM,EAASD,CAAU,EAGrBE,GACD,EAAE,GAAI,EAEPC,IACAV,EAAc,SAAW,GACzBD,EAAa,SAAW,EAC1B,CAAC,EAMD,SAASS,EAASG,EAAU,CAC1B,cAAcA,CAAQ,EACtBX,EAAc,SAAW,GACzBD,EAAa,SAAW,GACxBa,GACF,CAEA,SAASP,GAAoB,CAC3BQ,EAAS,KAAK,CACZ,QAAS,qCACT,MAAO,MACP,QAAS,IACT,YAAa,UACb,SAAU,UACd,CAAG,CACH,CAEA,SAASH,GAAwB,CAC/BG,EAAS,KAAK,CACZ,QACE,wEACF,MAAO,SACP,QAAS,IACT,YAAa,UACb,SAAU,UACd,CAAG,CACH,CAEA,SAASD,GAAsB,CAC7BC,EAAS,KAAK,CACZ,QAAS,+BACT,MAAO,QACP,QAAS,IACT,YAAa,UACb,SAAU,UACd,CAAG,CACH,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASV,GAA2B,CAClC,MAAMW,EAAWN,EAAUZ,EAAmB,KAAK,IAAK,CAAA,EAClD,CAAE,KAAAc,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKC,EAE1CnB,EAAQ,cAAc,aAAa,EAAE,YAAcoB,EAAQL,CAAI,EAC/Df,EAAQ,cAAc,cAAc,EAAE,YAAcoB,EAAQJ,CAAK,EACjEhB,EAAQ,cAAc,gBAAgB,EAAE,YAAcoB,EAAQH,CAAO,EACrEjB,EAAQ,cAAc,gBAAgB,EAAE,YAAcoB,EAAQF,CAAO,CACvE,CAEA,SAASE,EAAQC,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}